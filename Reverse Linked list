/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==NULL){
            return NULL;
        }
        vector<int> arr;
        ListNode* temp =head;
        // while(temp!=NULL){
        //     arr.push_back(temp->val);
        //     temp=temp->next;
        // }

        for (ListNode* temp = head; temp != nullptr; temp = temp->next) {
            arr.push_back(temp->val);
        }

        ListNode* head2= new ListNode(arr.back()); 
        ListNode* tmp=head2;
        for(int i=arr.size()-2;i>=0;i--){
            tmp->next= new ListNode(arr[i]); 
            tmp=tmp->next;
        }
        return head2;
    }
};
