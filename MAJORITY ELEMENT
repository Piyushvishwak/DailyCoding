class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        //MEMORY LIMIT EXCEEDED

        // unordered_map<int,int> ans;
        // for(int i=0;i<nums.size();i++){
        //     ans[nums[i]]++;
        // }
        // vector<int> fin;
        // for(int i=0;i<ans.size();i++){
        //     if(ans[i]>nums.size()/3){
        //         fin.push_back(i);
        //     }
        // }
        // return fin;


        vector<int> result;
        int n = nums.size();
        if (n == 0) return result;

        sort(nums.begin(), nums.end());

        int count = 1;
        for (int i = 1; i < n; i++) {
            if (nums[i] == nums[i - 1]) {
                count++;
            } else {
                if (count > n / 3) {
                    result.push_back(nums[i - 1]);
                }
                count = 1;
            }
        }

        if (count > n / 3) {
            result.push_back(nums[n - 1]);
        }

        return result;

    }
};
